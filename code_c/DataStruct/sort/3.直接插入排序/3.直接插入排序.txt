例如：
int a[] = {49,38,65,97,76,12,27}; （从小到大）

思路：
遍历数组所有数据，从下标为1的开始和前一个数比较，
第一次比较前两个数，若是第一个数比第二个数大，则把第二个数插入
到第一个数前面，然后在让第二个数和第三个数比较，若是
比第三个数大，把第三个数插入到前两个数合适的位置构成有序表，在拿第
三个数和第四个数，若是比第三个数大，则把第四数，插入到合适的位置，
构成有效表，以此类推。(当找到比要插入数据大的位置停下来，在比它
大的位置插入数据)

例如：
		i
49	38	65	97	76	12	27  (a[i] < a[i - 1],需要编号顺序)
比较前两个数，49 > 38，记录temp = 49，然后把38填充到49的位置,然后
把temp填充到39的位置.
				i
38  49  65  97  76  12  27   (a[i] > a[i - 1]说明前面排序正确，则不变)

						i	  temp = 76
38  49  65   76   97    12  27   (a[i] < a[i - 1]说明，排序正确，不变)

							  i		temp = 12
12  38  49  65  76  97  27   (a[i] < a[i - 1],,需要编号顺序,j = i - 1)
首先记录a[i]的值，从a[i - 1]开始直到a[0]，分别和a[i]比较，若是a[j]比a[i]大则
j--,知道找到a[j] <= a[i]的位置，在这个时候，插入a[i].后面以此类推。

										i
12 38  49  65  76   97    27   (a[i] < a[i - 1],,需要编号顺序)
首先记录a[i]的值，从a[i - 1]开始直到a[0]，分别和a[i]比较，若是a[j]比a[i]大则
j--,知道找到a[j] <= a[i]的位置，在这个时候，插入a[i].后面以此类推。

											j		i
12  27   38  49  65  76   97      (a[i] < a[i - 1],,需要编号顺序)
首先记录a[i]的值，从a[i - 1]开始直到a[0]，分别和a[i]比较，若是a[j]比a[i]大则
j--,知道找到a[j] <= a[i]的位置，在这个时候，插入a[i].后面以此类推。

代码详解：
int i = 0,temp = 0;
int a[] = {49,38,65,97,76,12,27}; （从小到大）
int len = sizeof(a)/sizeof(a[0]);

for(i = 1;i < len;i++)
{
		if(a[i] < a[i - 1])
		{
				temp = a[i];
				for(j = i - 1;j >= 0 && temp < a[j];j--)
				{
								a[j + 1] = a[j];	
				}
					a[j + 1] = temp;
		}
}

在最坏情况下，数组完全逆序，插入第2个元素时要考察前1个元素，插入第3个元素时，
要考虑前2个元素，……，插入第N个元素，要考虑前 N - 1 个元素。因此，
最坏情况下的比较次数是 1 + 2 + 3 + ... + (N - 1)，等差数列求和，
结果为 N^2 / 2，所以最坏情况下的复杂度为 O(N^2)。